// Code generated by mockery v2.18.0. DO NOT EDIT.

package mock

import (
	http "net/http"
	url "net/url"

	mock "github.com/stretchr/testify/mock"
)

// Jar is an autogenerated mock type for the jar type
type Jar struct {
	mock.Mock
}

// Cookies provides a mock function with given fields: u
func (_m *Jar) Cookies(u *url.URL) []*http.Cookie {
	ret := _m.Called(u)

	var r0 []*http.Cookie
	if rf, ok := ret.Get(0).(func(*url.URL) []*http.Cookie); ok {
		r0 = rf(u)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*http.Cookie)
		}
	}

	return r0
}

// SetCookies provides a mock function with given fields: u, cookies
func (_m *Jar) SetCookies(u *url.URL, cookies []*http.Cookie) {
	_m.Called(u, cookies)
}

type mockConstructorTestingTNewJar interface {
	mock.TestingT
	Cleanup(func())
}

// NewJar creates a new instance of Jar. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJar(t mockConstructorTestingTNewJar) *Jar {
	mock := &Jar{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
